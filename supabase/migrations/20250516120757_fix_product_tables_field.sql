/*
  # Fix Product Categories Table ID Field
  
  This migration modifies the product_categories table to allow importing data
  with predefined ID values. It changes the ID column constraint from
  GENERATED ALWAYS AS IDENTITY to GENERATED BY DEFAULT AS IDENTITY,
  which allows explicit values to be inserted.
*/

-- First drop the existing table
DROP TABLE IF EXISTS product_questions;
DROP TABLE IF EXISTS product_types;
DROP TABLE IF EXISTS product_categories;

-- Recreate the product_categories table with GENERATED BY DEFAULT AS IDENTITY
CREATE TABLE IF NOT EXISTS product_categories (
    id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name text NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    deleted_at timestamp with time zone DEFAULT null
);

-- Enable RLS for product_categories table
ALTER TABLE product_categories ENABLE ROW LEVEL SECURITY;

-- Select policy for product_categories table
CREATE POLICY "Users can view product categories"
  ON product_categories
  FOR SELECT
  TO authenticated
  USING (deleted_at IS NULL);

-- Recreate product_types table
CREATE TABLE IF NOT EXISTS product_types (
    id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    product text NOT NULL,
    description text,
    category_id bigint REFERENCES product_categories(id) NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    deleted_at timestamp with time zone DEFAULT null,
    user_id uuid REFERENCES auth.users(id) NOT NULL
);

-- Enable RLS for product_types table
ALTER TABLE product_types ENABLE ROW LEVEL SECURITY;

-- Select policy for product_types table
CREATE POLICY "Users can view product types"
  ON product_types
  FOR SELECT
  TO authenticated
  USING (deleted_at IS NULL);

-- Insert policy for product_types table
CREATE POLICY "Users can create their own product types"
  ON product_types
  FOR INSERT
  TO authenticated
  WITH CHECK (user_id = auth.uid());

-- Update policy for product_types table
CREATE POLICY "Users can update their own product types"
  ON product_types
  FOR UPDATE
  TO authenticated
  USING (user_id = auth.uid());

-- Delete policy for product_types table
CREATE POLICY "Users can delete their own product types"
  ON product_types
  FOR DELETE
  TO authenticated
  USING (user_id = auth.uid());

-- Recreate product_questions table
CREATE TABLE IF NOT EXISTS product_questions (
    id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
    question text NOT NULL,
    question_description text,
    question_id text,
    category_id bigint REFERENCES product_categories(id) NOT NULL,
    product_id bigint REFERENCES product_types(id) NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    deleted_at timestamp with time zone DEFAULT null,
    user_id uuid REFERENCES auth.users(id) NOT NULL
);

-- Enable RLS for product_questions table
ALTER TABLE product_questions ENABLE ROW LEVEL SECURITY;

-- Select policy for product_questions table
CREATE POLICY "Users can view product questions"
  ON product_questions
  FOR SELECT
  TO authenticated
  USING (deleted_at IS NULL);

-- Insert policy for product_questions table
CREATE POLICY "Users can create their own product questions"
  ON product_questions
  FOR INSERT
  TO authenticated
  WITH CHECK (user_id = auth.uid());

-- Update policy for product_questions table
CREATE POLICY "Users can update their own product questions"
  ON product_questions
  FOR UPDATE
  TO authenticated
  USING (user_id = auth.uid());

-- Delete policy for product_questions table
CREATE POLICY "Users can delete their own product questions"
  ON product_questions
  FOR DELETE
  TO authenticated
  USING (user_id = auth.uid());

-- Grant access permissions to product tables for authenticated users
GRANT SELECT, INSERT, UPDATE, DELETE ON product_categories TO authenticated;
GRANT SELECT, INSERT, UPDATE, DELETE ON product_types TO authenticated;
GRANT SELECT, INSERT, UPDATE, DELETE ON product_questions TO authenticated;
